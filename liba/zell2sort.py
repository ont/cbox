import zell
from sort import Sort

import zell_norm    ## aspect
import zell_rotate  ## aspect

def to_sort( self ):
    ## true order of names to check
    names = [ 'K1', 'K3', 'K5',                              ## groups : 1
              'H4', 'Q1', 'Q2', 'Q5', 'R1', 'R3', 'O3',      ## groups : 1,2
              'O4', 'O11', 'O12', 'O2', 'O5', 'M22', 'M3',   ## groups : 1,2,3
              'M11', 'M12', 'M21', 'M4', 'T3',               ## groups : 1,2,3,4
              'T2',                                          ## groups : 1,2,3,4,5
              'T1' ]                                         ## groups : 1,2,3,4,5,6

    def test( c, z ):
        g = {}
        for i in xrange( 6 ):
            n, v = c[ i ], abs( z[ i ] )
            g[ n ] = max( v, g.get( n, v ) )  ## store in group max possible abs value

        for i in xrange( 6 ):
            n = c[ i ]
            if ( n == 0 and abs( z[ i ] ) > 0.05 ) or\
               ( n != 0 and abs( z[ i ] ) < 0.05 ):     ## zeroes only on zeores
                return False
            elif n != 0 and ( g[ n ] - abs( z[ i ] ) ) > 0.05:
                return False

        return True

    z = self.norm()
    k = 10.0 / abs( min( z ) )   ## find max value in zell
    z = [ x * k for x in z ]     ## norm maximal parameter to 10.0
    for name in names:
        for c in zell.Zell.all_cond[ name ]:
            if test( c, z ):
                return Sort( name )

    ## hey we are here and this means that we can't
    ## determine sort (degenerate Zell symbol)
    #print "warn: degenerate Zell symbol! (%s)" % self.norm()
    z = self.norm()
    for name in names:
        for c in zell.Zell.all_cond[ name ]:
            if test( c, z ):
                return Sort( name )

    raise Exception, "can't determine sort of Zell symbol! (%s)" % self.norm()


zell.Zell.to_sort = to_sort

## unique conditions in terms of rotations
zell.Zell.cond =  {
        'K1'  : [(1, 1, 1, 1, 1, 1)],
        'K3'  : [(1, 0, 1, 1, 0, 1)],
        'K5'  : [(0, 0, 1, 1, 0, 1), (0, 0, 0, 1, 1, 1)],
        'H4'  : [(0, 1, 0, 1, 2, 1)],
        'Q1'  : [(1, 2, 1, 1, 2, 1)],
        'Q2'  : [(1, 0, 1, 1, 2, 1)],
        'Q5'  : [(0, 0, 0, 1, 2, 1), (1, 0, 0, 1, 2, 0), (0, 0, 2, 1, 0, 1)],
        'R1'  : [(1, 1, 1, 2, 2, 2)],
        'R3'  : [(1, 0, 1, 1, 0, 2)],
        'O3'  : [(2, 0, 2, 1, 0, 1), (1, 0, 2, 1, 0, 2)],
        'O4'  : [(0, 2, 3, 1, 0, 1), (0, 2, 0, 1, 3, 1)],
        'O11' : [(1, 2, 1, 1, 3, 1)],
        'O12' : [(1, 3, 2, 1, 3, 2)],
        'O2'  : [(1, 0, 2, 2, 3, 1)],
        'O5'  : [(3, 0, 0, 1, 2, 0), (0, 0, 2, 1, 0, 3), (0, 1, 0, 0, 2, 3), (0, 0, 0, 1, 2, 3)],
        'M22' : [(2, 0, 2, 1, 3, 1), (1, 0, 2, 1, 3, 2)],
        'M3'  : [(3, 0, 2, 1, 0, 1), (1, 0, 2, 1, 0, 3)],
        'M11' : [(1, 3, 2, 1, 4, 2)],
        'M12' : [(1, 3, 1, 2, 4, 2)],
        'M21' : [(1, 0, 2, 3, 4, 1)],      # <<< ( 1, 2, 3, 4, 5, 1 )  error in Brave table !!!
        'M4'  : [(0, 1, 3, 2, 0, 4), (0, 1, 0, 2, 3, 4), (0, 2, 0, 1, 3, 4)],
        'T3'  : [(1, 0, 2, 3, 0, 4), (4, 0, 2, 3, 0, 1), (2, 0, 1, 3, 0, 4)],
        'T2'  : [(5, 0, 2, 3, 4, 1), (1, 0, 2, 3, 4, 5)],
        'T1'  : [(1, 2, 3, 4, 5, 6)],
       }

## unique conditions in terms of mapping
## i.e (1,2,3,4,5,6) and (6,5,4,3,2,1) are equal (only group renaming)
##     (0,1,2,3,4,5) and (1,0,2,3,4,5) are NOT (because we need to rotate)
## You can use this data to check for sort without needing to rotate Zell symbol.
zell.Zell.all_cond = {
    'Q1'  : [(1, 2, 1, 1, 2, 1), (1, 1, 2, 1, 1, 2), (2, 1, 1, 2, 1, 1)],
    'Q2'  : [(1, 0, 1, 1, 2, 1), (1, 1, 0, 1, 1, 2), (1, 2, 1, 1, 0, 1), (1, 1, 2, 1, 1, 0), (0, 1, 1, 2, 1, 1), (2, 1, 1, 0, 1, 1)],
    'Q5'  : [(0, 0, 0, 1, 2, 1), (0, 0, 0, 1, 1, 2), (0, 2, 1, 1, 0, 0), (0, 1, 2, 1, 0, 0), (0, 0, 0, 2, 1, 1), (0, 1, 1, 2, 0, 0), (1, 0, 1, 0, 2, 0), (1, 0, 2, 0, 1, 0), (1, 2, 0, 0, 0, 1), (1, 1, 0, 0, 0, 2), (2, 0, 1, 0, 1, 0), (2, 1, 0, 0, 0, 1), (1, 0, 0, 1, 2, 0), (1, 0, 0, 1, 0, 2), (1, 2, 0, 1, 0, 0), (1, 0, 2, 1, 0, 0), (0, 1, 0, 2, 1, 0), (0, 0, 1, 2, 0, 1), (0, 1, 0, 0, 1, 2), (0, 0, 1, 0, 2, 1), (0, 1, 2, 0, 1, 0), (0, 2, 1, 0, 0, 1), (2, 1, 0, 0, 1, 0), (2, 0, 1, 0, 0, 1), (0, 0, 2, 1, 0, 1), (0, 2, 0, 1, 1, 0), (0, 0, 1, 1, 0, 2), (0, 1, 0, 1, 2, 0), (0, 0, 2, 0, 1, 1), (0, 2, 0, 0, 1, 1), (0, 1, 1, 0, 0, 2), (0, 1, 1, 0, 2, 0), (2, 0, 0, 1, 1, 0), (2, 0, 0, 1, 0, 1), (2, 1, 0, 1, 0, 0), (2, 0, 1, 1, 0, 0), (1, 0, 1, 0, 0, 2), (1, 2, 0, 0, 1, 0), (1, 0, 2, 0, 0, 1), (1, 1, 0, 0, 2, 0), (0, 0, 1, 0, 1, 2), (0, 2, 1, 0, 1, 0), (0, 1, 2, 0, 0, 1), (0, 1, 0, 0, 2, 1), (1, 0, 0, 2, 1, 0), (1, 0, 1, 2, 0, 0), (1, 1, 0, 2, 0, 0), (1, 0, 0, 2, 0, 1)],
    'M3'  : [(3, 0, 2, 1, 0, 1), (3, 2, 0, 1, 1, 0), (3, 0, 1, 1, 0, 2), (3, 1, 0, 1, 2, 0), (0, 3, 2, 0, 1, 1), (0, 1, 1, 0, 3, 2), (1, 0, 1, 3, 0, 2), (1, 2, 0, 3, 1, 0), (1, 0, 2, 3, 0, 1), (1, 1, 0, 3, 2, 0), (0, 3, 1, 0, 1, 2), (0, 1, 2, 0, 3, 1), (1, 0, 2, 1, 0, 3), (1, 2, 0, 1, 3, 0), (0, 1, 2, 0, 1, 3), (0, 2, 1, 0, 3, 1), (2, 1, 0, 3, 1, 0), (2, 0, 1, 3, 0, 1)],
    'K3'  : [(1, 0, 1, 1, 0, 1), (1, 1, 0, 1, 1, 0), (0, 1, 1, 0, 1, 1)],
    'M4'  : [(0, 1, 3, 2, 0, 4), (0, 3, 1, 2, 4, 0), (0, 0, 4, 2, 1, 3), (0, 4, 0, 2, 3, 1), (1, 0, 3, 0, 2, 4), (1, 3, 0, 0, 4, 2), (1, 2, 4, 0, 0, 3), (1, 4, 2, 0, 3, 0), (3, 0, 1, 4, 2, 0), (3, 1, 0, 4, 0, 2), (4, 0, 0, 3, 2, 1), (4, 1, 2, 3, 0, 0)],
    'K1'  : [(1, 1, 1, 1, 1, 1)],
    'K5'  : [(0, 0, 1, 1, 0, 1), (0, 1, 0, 1, 1, 0), (0, 0, 1, 0, 1, 1), (0, 1, 0, 0, 1, 1), (0, 1, 1, 0, 0, 1), (0, 1, 1, 0, 1, 0), (1, 0, 0, 1, 1, 0), (1, 0, 0, 1, 0, 1), (1, 1, 0, 1, 0, 0), (1, 0, 1, 1, 0, 0), (1, 0, 1, 0, 0, 1), (1, 1, 0, 0, 1, 0), (0, 0, 0, 1, 1, 1), (0, 1, 1, 1, 0, 0), (1, 0, 1, 0, 1, 0), (1, 1, 0, 0, 0, 1)],
    'O5'  : [(3, 0, 0, 1, 2, 0), (3, 0, 0, 1, 0, 2), (3, 2, 0, 1, 0, 0), (3, 0, 2, 1, 0, 0), (0, 3, 0, 2, 1, 0), (0, 0, 3, 2, 0, 1), (0, 3, 0, 0, 1, 2), (0, 0, 3, 0, 2, 1), (0, 1, 2, 0, 3, 0), (0, 2, 1, 0, 0, 3), (2, 3, 0, 0, 1, 0), (2, 0, 1, 0, 0, 3), (0, 0, 0, 1, 2, 3), (0, 2, 3, 1, 0, 0), (1, 0, 3, 0, 2, 0), (1, 2, 0, 0, 0, 3)],
    'O4'  : [(0, 2, 3, 1, 0, 1), (0, 3, 2, 1, 1, 0), (0, 0, 1, 1, 2, 3), (0, 1, 0, 1, 3, 2), (2, 0, 3, 0, 1, 1), (2, 3, 0, 0, 1, 1), (2, 1, 1, 0, 0, 3), (2, 1, 1, 0, 3, 0), (3, 0, 2, 1, 1, 0), (3, 2, 0, 1, 0, 1), (3, 1, 0, 1, 0, 2), (3, 0, 1, 1, 2, 0), (1, 2, 1, 0, 0, 3), (1, 3, 0, 0, 1, 2), (1, 0, 3, 0, 2, 1), (1, 1, 2, 0, 3, 0), (0, 0, 1, 2, 1, 3), (0, 3, 1, 2, 1, 0), (0, 1, 3, 2, 0, 1), (0, 1, 0, 2, 3, 1), (1, 0, 0, 3, 1, 2), (1, 2, 1, 3, 0, 0), (1, 1, 2, 3, 0, 0), (1, 0, 0, 3, 2, 1), (0, 2, 0, 1, 3, 1), (0, 0, 2, 1, 1, 3), (0, 3, 1, 1, 2, 0), (0, 1, 3, 1, 0, 2), (2, 0, 0, 3, 1, 1), (2, 1, 1, 3, 0, 0), (1, 2, 1, 0, 3, 0), (1, 0, 3, 0, 1, 2), (1, 3, 0, 0, 2, 1), (1, 1, 2, 0, 0, 3), (3, 0, 1, 2, 1, 0), (3, 1, 0, 2, 0, 1)],
    'O3'  : [(2, 0, 2, 1, 0, 1), (2, 2, 0, 1, 1, 0), (2, 0, 1, 1, 0, 2), (2, 1, 0, 1, 2, 0), (0, 2, 2, 0, 1, 1), (0, 2, 1, 0, 1, 2), (1, 0, 2, 1, 0, 2), (1, 2, 0, 1, 2, 0), (0, 1, 2, 0, 1, 2)],
    'O2'  : [(1, 0, 2, 2, 3, 1), (1, 2, 0, 2, 1, 3), (1, 3, 1, 2, 0, 2), (1, 1, 3, 2, 2, 0), (0, 1, 2, 3, 2, 1), (3, 1, 1, 0, 2, 2)],
    'R1'  : [(1, 1, 1, 2, 2, 2), (1, 2, 2, 2, 1, 1), (2, 1, 2, 1, 2, 1), (2, 2, 1, 1, 1, 2)],
    'R3'  : [(1, 0, 1, 1, 0, 2), (1, 1, 0, 1, 2, 0), (1, 0, 2, 1, 0, 1), (1, 2, 0, 1, 1, 0), (0, 1, 1, 0, 1, 2), (0, 1, 1, 0, 2, 1), (0, 1, 2, 0, 1, 1), (0, 2, 1, 0, 1, 1), (1, 1, 0, 2, 1, 0), (1, 0, 1, 2, 0, 1), (2, 1, 0, 1, 1, 0), (2, 0, 1, 1, 0, 1)],
    'T3'  : [(1, 0, 2, 3, 0, 4), (1, 2, 0, 3, 4, 0), (0, 1, 2, 0, 3, 4)],
    'T2'  : [(5, 0, 2, 3, 4, 1), (5, 2, 0, 3, 1, 4), (5, 4, 1, 3, 0, 2), (5, 1, 4, 3, 2, 0), (0, 5, 2, 4, 3, 1), (4, 5, 1, 0, 3, 2)],
    'M21' : [(1, 0, 2, 3, 4, 1), (1, 2, 0, 3, 1, 4), (1, 4, 1, 3, 0, 2), (1, 1, 4, 3, 2, 0), (0, 1, 2, 4, 3, 1), (0, 2, 1, 4, 1, 3), (2, 1, 0, 1, 3, 4), (2, 0, 1, 1, 4, 3), (2, 3, 4, 1, 1, 0), (2, 4, 3, 1, 0, 1), (4, 1, 1, 0, 3, 2), (4, 2, 3, 0, 1, 1)],
    'M22' : [(2, 0, 2, 1, 3, 1), (2, 2, 0, 1, 1, 3), (2, 3, 1, 1, 0, 2), (2, 1, 3, 1, 2, 0), (0, 2, 2, 3, 1, 1), (3, 2, 1, 0, 1, 2), (1, 0, 2, 1, 3, 2), (1, 2, 0, 1, 2, 3), (1, 3, 2, 1, 0, 2), (1, 2, 3, 1, 2, 0), (0, 1, 2, 3, 1, 2), (3, 1, 2, 0, 1, 2)],
    'T1'  : [(1, 2, 3, 4, 5, 6)],
    'O12' : [(1, 3, 2, 1, 3, 2)],
    'O11' : [(1, 2, 1, 1, 3, 1), (1, 1, 2, 1, 1, 3), (2, 1, 1, 3, 1, 1)],
    'H4'  : [(0, 1, 0, 1, 2, 1), (0, 0, 1, 1, 1, 2), (0, 2, 1, 1, 1, 0), (0, 1, 2, 1, 0, 1), (1, 0, 0, 2, 1, 1), (1, 1, 1, 2, 0, 0), (1, 1, 1, 0, 2, 0), (1, 0, 2, 0, 1, 1), (1, 2, 0, 0, 1, 1), (1, 1, 1, 0, 0, 2), (2, 0, 1, 1, 1, 0), (2, 1, 0, 1, 0, 1)],
    'M11' : [(1, 3, 2, 1, 4, 2), (1, 2, 3, 1, 2, 4), (3, 1, 2, 4, 1, 2)],
    'M12' : [(1, 3, 1, 2, 4, 2), (1, 1, 3, 2, 2, 4), (1, 4, 2, 2, 3, 1), (1, 2, 4, 2, 1, 3), (3, 1, 1, 4, 2, 2), (4, 1, 2, 3, 2, 1)]
}
